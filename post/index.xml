<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tom Rees</title>
    <link>http://tomre.es/post/</link>
    <description>Recent content in Posts on Tom Rees</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 May 2015 13:32:49 +0000</lastBuildDate>
    <atom:link href="http://tomre.es/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>DIY Pedal Board - Scrap Wood &amp; Bike Chain</title>
      <link>http://tomre.es/post/diy-guitar-pedal-board-with-bike-chain/</link>
      <pubDate>Sat, 09 May 2015 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/diy-guitar-pedal-board-with-bike-chain/</guid>
      <description>&lt;p&gt;My velcro pedalboard kept falling apart in transit to gigs, so I built a much stronger unit with scrap materials. It&amp;rsquo;s secure, very robust, and easy to build.&lt;/p&gt;

&lt;p&gt;You can also &lt;a href=&#34;http://imgur.com/gallery/EAHnA/&#34;&gt;view the gallery on imgur&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/1.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/1.jpg&#34; alt=&#34;pedal board stage 1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;bike chain method&amp;rdquo; uses rings from an old chain to screw down the pedals.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/2.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/2.jpg&#34; alt=&#34;pedal board stage 2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/3.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/3.jpg&#34; alt=&#34;pedal board stage 3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They&amp;rsquo;re the perfect size for Boss boxes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/4.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/4.jpg&#34; alt=&#34;pedal board stage 4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Larger pedals need something bigger. Here I&amp;rsquo;ve heated and flattened a couple of metal brackets.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/5.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/5.jpg&#34; alt=&#34;pedal board stage 5&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just the right size for the Dunlop Crybaby and the Proco RAT.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/6.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/6.jpg&#34; alt=&#34;pedal board stage 6&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/7.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/7.jpg&#34; alt=&#34;pedal board stage 7&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Planning the wood slats and the signal chain.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/8.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/8.jpg&#34; alt=&#34;pedal board stage 8&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/9.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/9.jpg&#34; alt=&#34;pedal board stage 9&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building a small wooden frame, painting with primer + spraypaint.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/10.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/10.jpg&#34; alt=&#34;pedal board stage 10&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/11.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/11.jpg&#34; alt=&#34;pedal board stage 11&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Testing it all fits inside the carry case before screwing everything together.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/12.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/12.jpg&#34; alt=&#34;pedal board stage 12&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bonus: Cut a hole in a spring-loaded pick holder to firmly attach it to the board.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/13.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/13.jpg&#34; alt=&#34;pedal board stage 13&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All done! Everything screwed together. Solid as a rock, and won&amp;rsquo;t fall apart in transit.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/pedalboard/full/14.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/pedalboard/thumb/14.jpg&#34; alt=&#34;pedal board stage 14&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fitted inside the carry case.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You can also &lt;a href=&#34;https://www.reddit.com/r/guitarpedals/comments/39mjtn/scrap_materials_turned_into_a_rocksolid_board_my/&#34;&gt;view the short discussion on Reddit&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Organograms Explorer: A D3 Guide to the Civil Service</title>
      <link>http://tomre.es/post/organograms-a-d3-guide-to-the-civil-service/</link>
      <pubDate>Sat, 01 Mar 2014 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/organograms-a-d3-guide-to-the-civil-service/</guid>
      <description>&lt;p&gt;This is personal side-project which was picked up for further development by the UK Cabinet Office. Smaller agencies such as the &lt;em&gt;Government Procurement Service&lt;/em&gt; work best. To see the template break down, try something like &lt;em&gt;Ministry of Justice&lt;/em&gt;.&lt;/p&gt;
    
&lt;div id=&#34;organograms-loading&#34;&gt;
  &lt;em style=&#34;text-align: center; display: block; height: 100px; line-height: 100px; &#34;&gt;Loading...&lt;/em&gt;
&lt;/div&gt;
&lt;div id=&#34;organograms-container&#34; style=&#34;display:none;&#34;&gt;
&lt;table id=&#34;index-table&#34;&gt;
  &lt;tr&gt;
    &lt;td class=&#34;left&#34;&gt;Department:&lt;/td&gt;
    &lt;td class=&#34;right&#34;&gt;&lt;select style=&#34;width: 100%;&#34; id=&#34;index&#34;&gt;&lt;/select&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;div id=&#34;organogram-view-mode&#34;&gt;
  &lt;div class=&#34;organogram-click-hint&#34;&gt;&amp;lArr; Try clicking!&lt;/div&gt;
&lt;div class=&#34;radio&#34;&gt;
  &lt;label&gt;
    &lt;input type=&#34;radio&#34; class=&#34;organogram-button&#34; name=&#34;optionsRadios&#34; value=&#34;option1&#34; checked=&#34;checked&#34; /&gt;
    View as Organisation Chart
  &lt;/label&gt;
&lt;/div&gt;
&lt;div class=&#34;radio&#34;&gt;
  &lt;label&gt;
    &lt;input type=&#34;radio&#34;  class=&#34;organogram-button&#34; name=&#34;optionsRadios&#34; value=&#34;option2&#34; /&gt;
    View as Money Map
  &lt;/label&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;organogram-viz&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;hr/&gt;

&lt;ul&gt;
  &lt;li&gt;I used a Python scraper to pull all the &lt;a href=&#34;https://data.gov.uk/dataset/staff-organograms-and-pay-civil-service-learning&#34;&gt;UK Civil Service Organograms Data&lt;/a&gt; from the linked-data triplestore.&lt;/li&gt;
  &lt;li&gt;I learned to hate linked data and triplestores. If you think they are a good idea I can prove you wrong. With science.&lt;/li&gt;
  &lt;li&gt;This data is &lt;strong&gt;out of date!&lt;/strong&gt; It was scraped around mid-2012.&lt;/li&gt;
  &lt;li&gt;I wanted to build a communication tool to represent both the hierarchy of roles in the civil service, and the respective pay scales.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr/&gt;


&lt;script src=&#34;http://tomre.es/organograms/modernizr-latest.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://tomre.es/organograms/d3.v3.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://tomre.es/organograms/chosen.jquery.min.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://tomre.es/gen/organograms.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;http://tomre.es/organograms/chosen.min.css&#34;/&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;http://tomre.es/gen/organograms.css&#34;/&gt;

</description>
    </item>
    
    <item>
      <title>Linux User Feature: Raspberry Pi/Lego Car</title>
      <link>http://tomre.es/post/linux-user-lego-pi-feature/</link>
      <pubDate>Tue, 15 Jan 2013 22:49:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/linux-user-lego-pi-feature/</guid>
      <description>&lt;p&gt;Shortly after publishing the &lt;a href=&#34;http://tomre.es/post/lego-xbox-raspberry-pi/&#34;&gt;previous article&lt;/a&gt; it was picked up and republished by Linux User magazine to celebrate the first birthday of the Raspberry Pi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/linuxuser_article_full.jpg&#34;&gt;&lt;img src=&#34;http://tomre.es/img/linuxuser_article.jpg&#34; alt=&#34;Article in Magazine&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think the thing that has really encouraged me is if you actually look at the number of these things where the Pi is a tool, it is not the Pi itself that is really the hit, it is the thing around it that is really the piece of inventive genius.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Eben Upton&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>HOWTO: Build an RC Car using Lego and a Raspberry Pi</title>
      <link>http://tomre.es/post/lego-xbox-raspberry-pi/</link>
      <pubDate>Mon, 03 Dec 2012 22:49:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/lego-xbox-raspberry-pi/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; See &lt;a href=&#34;http://www.flickr.com/photos/zephod/sets/72157632285374850/&#34;&gt;the Lego/Raspberry Pi project on Flickr&lt;/a&gt; for a photo diary of the construction process.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/zephod/sets/72157632285374850/&#34;&gt;&lt;img src=&#34;http://tomre.es/img/legocar_flickr.jpg&#34; alt=&#34;Flickr Photos&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;When I was a child I always wanted a remote control car. I never got one – usually my parents convinced me that the novelty would wear off in an hour, and that it wouldn’t be worth the expense. (They were probably right). I usually opted for a safer videogame-based option at Christmas time, and on my birthday I’d ask for Lego. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/raspberrypi.jpg&#34; alt=&#34;Raspberry Pi&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Raspberry Pi – a tiny, low-power computer that fits in the palm of your hand – provided the inspiration for a project to finally put that right. Using bricks from my childhood Lego collection, and a wireless Xbox 360 controller from my teenage years, at long last I could hack together a remote control car! How hard could it be?&lt;/p&gt;

&lt;h2 id=&#34;not-exactly-simple:3182ed04c08c27eb0fccf88285c1f4bb&#34;&gt;Not exactly simple&lt;/h2&gt;

&lt;p&gt;I’m a programmer by trade, but any knowledge of electronics learned during University apparently died at graduation. The necessary software configuration and ~200 lines of Python coding took very little time. The fairly simple circuitry took a &lt;em&gt;long&lt;/em&gt; time, and caught fire on several occasions. Your mileage may vary. &lt;/p&gt;

&lt;p&gt;There have been similar attempts to control RC cars from an Xbox controller:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=LHLnw9Yt1rk&#34;&gt;Dan from Chicago&lt;/a&gt; put a Netduino controller on his car which connects via his laptop.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jedibowler.com/2011/09/24/controlling-an-rc-car-with-an-xbox-360-controller-via-a-netduino/&#34;&gt;Keegan at jedibowler.com&lt;/a&gt; used Netduino on the car as well, and has a PC on the floor issuing commands.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This project takes it a step further because the Raspberry Pi is a complete computer, so &lt;strong&gt;all the hardware lives on the car&lt;/strong&gt;. There is no need for a laptop issuing commands over Wifi.&lt;/p&gt;

&lt;h2 id=&#34;building-the-chassis:3182ed04c08c27eb0fccf88285c1f4bb&#34;&gt;Building the Chassis&lt;/h2&gt;

&lt;p&gt;The design of the chassis aims to be as simple and robust as possible. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/legocar1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;No, really, robustness is key. Some observations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Technic clip-joints and axles through everything. &lt;/li&gt;
&lt;li&gt;Using Lego studs to join any two parts of the chassis was a waste of effort. Shearing stress pulls them apart easily. &lt;/li&gt;
&lt;li&gt;Servos and motors would rather pull the Lego apart than turn the wheels. They need to be very firmly held in place.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two motors are required:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steering is controlled via a high torque &lt;a href=&#34;http://adafruit.com/products/155&#34;&gt;180 degree Towerpro servo from AdaFruit&lt;/a&gt;. A Lego gear is attached with superglue.&lt;/li&gt;
&lt;li&gt;The rear axle is attached to a &lt;a href=&#34;http://shop.lego.com/en-US/LEGO-Power-Functions-XL-Motor-8882&#34;&gt;Lego Power Functions XL-Motor&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/legomotor.jpg&#34; style=&#34;margin: 0 10px 10px 10px; float: right;&#34; /&gt;
Originally I used an old 9V Technic motor, but it wasn’t strong enough to turn the rear axle. There’s a fascinating &lt;a href=&#34;http://www.philohome.com/motors/motorcomp.htm&#34;&gt;analysis of Lego motors on philohome.com&lt;/a&gt; which suggests that the newer motor has around 40 times more torque. I purchased one online for just $10.&lt;/p&gt;

&lt;h2 id=&#34;electronics-and-soldering:3182ed04c08c27eb0fccf88285c1f4bb&#34;&gt;Electronics and Soldering&lt;/h2&gt;

&lt;p&gt;The motors are controlled via PWM (&lt;em&gt;Pulse Width Modulation&lt;/em&gt;) using the excellent &lt;a href=&#34;http://adafruit.com/products/815&#34;&gt;Adafruit 16-channel PWM driver&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/pwmdriver.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://learn.adafruit.com/adafruit-16-channel-servo-driver-with-raspberry-pi&#34;&gt;tutorials on Adafruit’s website&lt;/a&gt; are truly exemplary, and in less than an hour I had the Raspberry Pi controlling motor speed and servo rotation. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/legocar2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The above shot demonstrates circuitry mounted onto the chassis.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adafruit’s &lt;a href=&#34;http://adafruit.com/products/914&#34;&gt;Cobbler Breakout Kit&lt;/a&gt; is used to connect the Raspberry Pi to a prototyping plug-board.&lt;/li&gt;
&lt;li&gt;The i2c connectors (&lt;code&gt;SDA0&lt;/code&gt; and &lt;code&gt;SCL0&lt;/code&gt;, &lt;code&gt;3v3&lt;/code&gt; and &lt;code&gt;GND&lt;/code&gt;) are then connected to the PWM driver.&lt;/li&gt;
&lt;li&gt;GPIO pins &lt;code&gt;21&lt;/code&gt; and &lt;code&gt;17&lt;/code&gt; are connected to a cheap &lt;a href=&#34;http://en.wikipedia.org/wiki/H_bridge&#34;&gt;H Bridge&lt;/a&gt; chip, specifically the &lt;a href=&#34;http://www.pololu.com/catalog/product/713&#34;&gt;TB6612FNG from pololu.com&lt;/a&gt;. This will drive the main motor forwards or backwards. &lt;/li&gt;
&lt;li&gt;Output &lt;code&gt;0&lt;/code&gt; on the PWM driver runs into the H Bridge. This controls the main motor’s speed.&lt;/li&gt;
&lt;li&gt;Output &lt;code&gt;1&lt;/code&gt; on the PWM driver runs to the steering servo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;software:3182ed04c08c27eb0fccf88285c1f4bb&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;Finally, the Raspberry Pi must be loaded with some software which translates Xbox controller buttons into motor speed, motor direction, and steering rotation. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/xboxdongle.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.amazon.co.uk/Xbox-Wireless-Gaming-Receiver-Windows/dp/B000MGVAAQ&#34;&gt;Xbox 360 Wireless Gaming Receiver for Windows&lt;/a&gt; is required to connect the controller. Microsoft use a custom wireless protocol, so a regular Bluetooth modem will not work. This bulky device consumes quite a lot of power, but at least it is relatively inexpensive.&lt;/p&gt;

&lt;p&gt;“For Windows” should not be taken too seriously. Ingo Ruhnke’s excellent &lt;a href=&#34;http://pingus.seul.org/~grumbel/xboxdrv/&#34;&gt;Xbox/Xbox 360 USB Gamepad Driver for Linux&lt;/a&gt; is a perfect solution for hooking up the wireless USB device, and it installs in seconds on a Raspberry Pi running Ubuntu.&lt;/p&gt;

&lt;p&gt;At last, I can get back to programming! I hacked together a couple of Python modules to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;xboxdrv&lt;/code&gt; as a subprocess, which connects to the controller.&lt;/li&gt;
&lt;li&gt;Read from the &lt;code&gt;stdout&lt;/code&gt; pipe as it constantly prints out the controller state.&lt;/li&gt;
&lt;li&gt;Watch for changes in &lt;code&gt;LT&lt;/code&gt; (left trigger), &lt;code&gt;RT&lt;/code&gt; (right trigger) and &lt;code&gt;X1&lt;/code&gt; (left thumbstick).&lt;/li&gt;
&lt;li&gt;Update the outputs as appropriate through Adafruit’s libraries.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, to control the steering:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #177500&#34;&gt;# Left thumbstick controls the steering&lt;/span&gt;
&lt;span style=&#34;color: #A90D91&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;event.key==&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;X1&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color: #000000&#34;&gt;steer&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt;( &lt;span style=&#34;color: #000000&#34;&gt;servoMid&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color: #000000&#34;&gt;servoWidth*-event.value&lt;/span&gt;)&lt;span style=&#34;color: #000000&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;32768&lt;/span&gt; )
    &lt;span style=&#34;color: #000000&#34;&gt;pwm.setPWM&lt;/span&gt;(&lt;span style=&#34;color: #1C01CE&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #1C01CE&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color: #000000&#34;&gt;steer&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The complete software kit is available in &lt;a href=&#34;http://github.com/zephod/lego-pi&#34;&gt;a repository on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;completion:3182ed04c08c27eb0fccf88285c1f4bb&#34;&gt;Completion&lt;/h2&gt;

&lt;p&gt;Here’s my DIY-RC-Car in action. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe frameborder=&#34;0&#34; height=&#34;284&#34; src=&#34;http://www.youtube.com/embed/X7YRqCCBDBU&#34; width=&#34;505&#34;&gt;&lt;/iframe&gt;
&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Scrabble (2 of 2)</title>
      <link>http://tomre.es/post/hacking-scrabble-part-2/</link>
      <pubDate>Fri, 27 Jul 2012 11:49:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/hacking-scrabble-part-2/</guid>
      <description>

&lt;h2 id=&#34;hacking-scrabble-http-blog-zephod-com-post-28118665268-hacking-scrabble:9043a2639db2573b622f2de621fc9ca2&#34;&gt;&lt;a href=&#34;http://blog.zephod.com/post/28118665268/hacking-scrabble&#34;&gt;Hacking Scrabble&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Skip straight to these summary graphics to improve your Scrabble game:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;#results&#34;&gt;&lt;img src=&#34;http://tomre.es/img/hacking_scrabble_preview.png&#34; alt=&#34;Jump to Hacking Scrabble results&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;introduction:9043a2639db2573b622f2de621fc9ca2&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;A while ago I was &lt;a href=&#34;http://blog.zephod.com/post/14167418899/hacking-scrabble-part-1&#34;&gt;blogging about&lt;/a&gt; a little research project I called Hacking Scrabble, which received a lot of interest and was &lt;a href=&#34;http://lifehacker.com/5868095/hacking-scrabble-part-one&#34;&gt;published on LifeHacker&lt;/a&gt;. I was trying to get better at the game by using the kind of memory tricks we learned in school:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“My Very Easy Method Just Speeds Up Naming Planets”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m a programmer by trade so inevitably I wrote &lt;a href=&#34;http://github.com/zephod/scrabble-tools&#34;&gt;Mnemonic Finder&lt;/a&gt;, a Python program to quickly search the dictionary looking for these kinds of phrases. The idea was to memorise all &lt;strong&gt;two-letter words&lt;/strong&gt;, which I’m targeting because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They are vital. Games become stagnant when the board is full up and nobody can play in the tight corners without creating a string of two-letter words.&lt;/li&gt;
&lt;li&gt;There aren’t actually that many of them: 124 in the international rules, 101 in the US rules.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;the-solution-first-attempt:9043a2639db2573b622f2de621fc9ca2&#34;&gt;The Solution (First Attempt)&lt;/h2&gt;

&lt;p&gt;My &lt;a href=&#34;http://blog.zephod.com/post/14167418899/hacking-scrabble-part-1&#34;&gt;first attempt at writing this column&lt;/a&gt; arrived at a technique which &lt;em&gt;sort of&lt;/em&gt; worked.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every 2 letter word is a &lt;strong&gt;prefix&lt;/strong&gt; and a &lt;strong&gt;suffix&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;eg. &lt;strong&gt;“at”&lt;/strong&gt; has a prefix &lt;strong&gt;“a”&lt;/strong&gt; and a suffix &lt;strong&gt;“t”&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;So every &lt;strong&gt;prefix&lt;/strong&gt; can have a few different &lt;strong&gt;suffixes&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The prefix &lt;strong&gt;a&lt;/strong&gt; can have suffix &lt;strong&gt;t&lt;/strong&gt; but not suffix &lt;strong&gt;q&lt;/strong&gt;, because &lt;strong&gt;aq&lt;/strong&gt; is not a word.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For each letter, list _all_its possible suffixes.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;a&lt;/strong&gt; can have any of: &lt;strong&gt;abdeghilmnrstwxy&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Use Mnemonic Finder to look for a phrase which &lt;strong&gt;contains all those letters&lt;/strong&gt; but &lt;strong&gt;no other letters&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;“&lt;strong&gt;birthdays mangle wax&lt;/strong&gt;” will help you remember all the letters that can go after &lt;strong&gt;a&lt;/strong&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;why-doesn-t-it-work:9043a2639db2573b622f2de621fc9ca2&#34;&gt;Why Doesn’t It Work?&lt;/h2&gt;

&lt;p&gt;First, it’s not &lt;em&gt;that&lt;/em&gt; great. I still need to memorise twenty six phrases and know which letter they each apply to.&lt;/p&gt;

&lt;p&gt;Second, the suffixes of &lt;strong&gt;u&lt;/strong&gt; are &lt;strong&gt;ghmnprst&lt;/strong&gt;. Can you see the problem? There are no vowels! &lt;strong&gt;ua&lt;/strong&gt;, &lt;strong&gt;ue&lt;/strong&gt;, &lt;strong&gt;ui&lt;/strong&gt;, &lt;strong&gt;uo&lt;/strong&gt;, and &lt;strong&gt;uu&lt;/strong&gt; are not words. So Mnemonic Finder can’t find a single thing in the dictionary. Maybe you can learn it by saying it out loud: “Gahumnapurst”. Maybe not.&lt;/p&gt;

&lt;p&gt;In fact, out of twenty six attempts, I only succeeded in finding about ten useful phrases. Okay, it’s better than learning over a hundred words, but we can do better still with a little lateral thinking.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;restructuring-the-problem:9043a2639db2573b622f2de621fc9ca2&#34;&gt;Restructuring The Problem&lt;/h2&gt;

&lt;p&gt;Many astute readers emailed me to point out that &lt;strong&gt;nearly all two-letter words contain a vowel&lt;/strong&gt;. Instead of memorising the suffixes of every letter, we could memorise the &lt;strong&gt;suffixes and prefixes of every vowel&lt;/strong&gt;.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&amp;laquo; prefixes&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;|&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;suffixes &amp;raquo;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ztnlkjhdbfypmae&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;aeibdghlmnrstwxy&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ywtrpnmhfdbaeo&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;e&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;aedfhlmnrstx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;xtsqpmlhkdgboa&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;odfnst&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;zywtsmlkjhbdgnpio&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;o&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;eioubdfhmnprswxy&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;gmnxyo&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;u&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ghmnprst&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;This is a great idea: We only have to memorise _ten phrases_… plus a few words containing no vowels.&lt;/li&gt;
&lt;li&gt;However, the computer still has trouble finding words in the dictionary… “&lt;strong&gt;ghmnprst&lt;/strong&gt;” is still up there.&lt;/li&gt;
&lt;li&gt;There’s a bit of redundant information in there. &lt;strong&gt;o&lt;/strong&gt; is both a &lt;strong&gt;prefix&lt;/strong&gt; and a &lt;strong&gt;suffix&lt;/strong&gt; of itself because &lt;strong&gt;oo&lt;/strong&gt; is a word.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’re on the right path. A final step is needed to make this work.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;just-the-consonants-please:9043a2639db2573b622f2de621fc9ca2&#34;&gt;Just The Consonants, Please&lt;/h2&gt;

&lt;p&gt;The problem is that it’s hard to find mnemonics if you don’t have many vowels. I experimented with a tweak to Mnemonic Finder allowing it to use &lt;em&gt;all the vowels it likes&lt;/em&gt;, and once again gave it &lt;strong&gt;ghmnprst&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;prognathism&amp;quot;
&amp;quot;graph mints&amp;quot;
&amp;quot;hemp string&amp;quot;
&amp;quot;nightmare gasp&amp;quot;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thousands of phrases tumbled out! This is the key to the solution: Let’s seperate the vowels from the consonants. Here’s the table again with &lt;strong&gt;only consonants&lt;/strong&gt; in the left and right columns.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&amp;laquo; prefixes&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;|&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;suffixes &amp;raquo;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ztnlkjhdbfypm&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;bdghlmnrstwxy&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ywtrpnmhfdb&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;e&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;dfhlmnrstx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;xtsqpmlhkdgb&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;dfnst&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;zywtsmlkjhbdgnp&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;o&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;bdfhmnprswxy&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;gmnxy&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;u&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ghmnprst&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The words we had to remove were the &lt;strong&gt;double vowels&lt;/strong&gt;. A shame that they didn’t fit, but they won’t be too difficult to memorise: There’s only nine of them (or just five for players in the USA).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aa ae ai ee ea io oo ou oe 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, I’ve avoided telling you about the &lt;strong&gt;double consonants&lt;/strong&gt;. They never fitted onto that table anyway, and must also be memorised the hard way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sh ch st mm hm my ky fy by ny
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;through-the-mnemonic-machine:9043a2639db2573b622f2de621fc9ca2&#34;&gt;Through the Mnemonic Machine&lt;/h2&gt;

&lt;p&gt;Using Mnemonic Finder in “free vowels mode” produces hundreds (usually thousands) of dictionary words for each entry in the table. At last, we can replace ugly blocks such as &lt;strong&gt;ghmnprst&lt;/strong&gt; with meaningful, memorable phrases like &lt;strong&gt;hemp string&lt;/strong&gt;.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&amp;laquo; prefixes&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;|&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;suffixes &amp;raquo;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;the band played folk jazz metal&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;birthdays mangle wax&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;thumbprint fade away&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;e&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tax his farmland&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;exquisite godlike humble pie&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;infested&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;mask playing with jazz band&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;o&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;six dumb hippy windsurfers&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;onyx gem&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;u&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hemp string&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can generate your own if these aren’t to your taste. I prefer phrases with a powerful (if absurd) mental image. I’ve logged my development in a public gist for both the &lt;a href=&#34;https://gist.github.com/3141231&#34;&gt;International version&lt;/a&gt; and the &lt;a href=&#34;https://gist.github.com/3141380&#34;&gt;US/Canada version&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is important to remember that we are &lt;strong&gt;just memorising consonants&lt;/strong&gt;. The suffixes of &lt;strong&gt;i&lt;/strong&gt; are &lt;strong&gt;“infested”&lt;/strong&gt;, meaning &lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;f&lt;/strong&gt;, &lt;strong&gt;s&lt;/strong&gt;, &lt;strong&gt;t&lt;/strong&gt;, or &lt;strong&gt;d&lt;/strong&gt;. Ignore the vowels; &lt;strong&gt;ie&lt;/strong&gt; is not a word.&lt;/p&gt;

&lt;p&gt;Once you understand and memorise that table, you know &lt;strong&gt;one hundred and four&lt;/strong&gt; words! The remaining twenty I leave to you. Did you think it was all going to be that easy?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aa ae ai ee ea io oo ou oe 
sh ch st mm hm my ky fy by ny
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;in-a-real-life-battle-situation:9043a2639db2573b622f2de621fc9ca2&#34;&gt;In A Real Life Battle Situation&amp;hellip;&lt;/h2&gt;

&lt;p&gt;So you want to play a two-letter-word, but you’re not sure it exists?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If it’s a &lt;strong&gt;double consonant&lt;/strong&gt;, you should know it by heart.&lt;/li&gt;
&lt;li&gt;If it’s a &lt;strong&gt;double vowel&lt;/strong&gt;, you should also know it by heart!&lt;/li&gt;
&lt;li&gt;If it &lt;strong&gt;starts with a vowel&lt;/strong&gt;, think of the &lt;strong&gt;right hand column&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Eg. The first letter is &lt;strong&gt;e&lt;/strong&gt;, the second letter must be in &lt;strong&gt;tax his farmland&lt;/strong&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If it &lt;strong&gt;ends with a vowel&lt;/strong&gt;, think of the &lt;strong&gt;left hand column&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Eg. if the last letter is &lt;strong&gt;e&lt;/strong&gt;, the first letter must be in &lt;strong&gt;thumbprint fade away&lt;/strong&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fortunately, I have turned all of this into a beautiful infographic that you can print out and treasure forever.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-results-a-for-players-using-the-north-american-rules:9043a2639db2573b622f2de621fc9ca2&#34;&gt;&lt;a name=&#34;results&#34;&gt;&lt;/a&gt; For players using the North American rules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/hacking_scrabble_us.png&#34;&gt;&lt;img src=&#34;http://tomre.es/img/hacking_scrabble_us.png&#34; alt=&#34;Hacking Scrabble Cheatsheet: US Edition&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Valid in the US, Canada, and Thailand&lt;/li&gt;
&lt;li&gt;Source data: &lt;a href=&#34;https://gist.github.com/3141380&#34;&gt;https://gist.github.com/3141380&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;for-players-using-the-international-rules:9043a2639db2573b622f2de621fc9ca2&#34;&gt;For players using the International rules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tomre.es/img/hacking_scrabble_uk.png&#34;&gt;&lt;img src=&#34;http://tomre.es/img/hacking_scrabble_uk.png&#34; alt=&#34;Hacking Scrabble Cheatsheet: Internatinoal Edition&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Valid everywhere &lt;em&gt;except&lt;/em&gt; the US, Canada and Thailand&lt;/li&gt;
&lt;li&gt;Source data: &lt;a href=&#34;https://gist.github.com/3141231&#34;&gt;https://gist.github.com/3141231&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;This article was originally published on zephod.com on Tumblr, and has been migrated to tomre.es on GitHub Pages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/tumblr_archive_2.png&#34; alt=&#34;(defunct) Tumblr Social Links&#34; style=&#34;margin: 0; width: 292px;&#34;/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>/usr/bin/filter</title>
      <link>http://tomre.es/post/filter/</link>
      <pubDate>Fri, 13 Apr 2012 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/filter/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/downloads/zephod/filter/filter.zip&#34;&gt;Download .ZIP&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/downloads/zephod/filter/filter.tar.gz&#34;&gt;Download .TAR.GZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zephod/filter&#34;&gt;View on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;replacing-mv:03285bdc704a53de2afbdd4c6c57e10d&#34;&gt;Replacing &lt;code&gt;mv&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Filter uses &lt;a href=&#34;http://en.wikipedia.org/wiki/Regular_expression&#34;&gt;regular expressions&lt;/a&gt; to rename files. I have always felt this is the &amp;ldquo;missing UNIX command&amp;rdquo;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;$ &lt;/span&gt;filter report* &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;s/..from.chris.//&amp;quot;&lt;/span&gt;

report analysis &lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;from chris&lt;span style=&#34;color: #000000&#34;&gt;)&lt;/span&gt;.doc     -&amp;gt;     report analysis.doc
report datasheet &lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;from chris&lt;span style=&#34;color: #000000&#34;&gt;)&lt;/span&gt;.xls    -&amp;gt;     report datasheet.xls
report discussion &lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;from chris&lt;span style=&#34;color: #000000&#34;&gt;)&lt;/span&gt;.doc   -&amp;gt;     report discussion.doc
Rename these files? &lt;span style=&#34;color: #000000&#34;&gt;[&lt;/span&gt;y/N&lt;span style=&#34;color: #000000&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;$ &lt;/span&gt;filter * &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;s/Episode./S01E0/&amp;quot;&lt;/span&gt;

Game of Thrones Episode 1.mpg    -&amp;gt;     Game of Thrones S01E01.mpg
Game of Thrones Episode 2.mpg    -&amp;gt;     Game of Thrones S01E02.mpg
Game of Thrones Episode 3.mpg    -&amp;gt;     Game of Thrones S01E03.mpg
Rename these files? &lt;span style=&#34;color: #000000&#34;&gt;[&lt;/span&gt;y/N&lt;span style=&#34;color: #000000&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;usage:03285bdc704a53de2afbdd4c6c57e10d&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;filter&lt;/strong&gt; wraps around GNU &lt;a href=&#34;http://en.wikipedia.org/wiki/Sed&#34;&gt;sed&lt;/a&gt;, so it uses &lt;code&gt;s/search/replace&lt;/code&gt; syntax. For example, to rename all &lt;code&gt;.txt&lt;/code&gt; files, changing the &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s to &lt;code&gt;e&lt;/code&gt;&amp;rsquo;s:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;$ &lt;/span&gt;filter *.txt s/a/e/
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The syntax also supports &lt;a href=&#34;http://www.regular-expressions.info/brackets.html&#34;&gt;backreferences&lt;/a&gt;, which are captured in brackets. Refer to groups with &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;$ &lt;/span&gt;filter * &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;s/foo\(.\)bar/baz\1/&amp;quot;&lt;/span&gt;

foo1bar.txt    -&amp;gt;     baz1.txt
foo2bar.txt    -&amp;gt;     baz2.txt
foo3bar.txt    -&amp;gt;     baz3.txt
Rename these files? &lt;span style=&#34;color: #000000&#34;&gt;[&lt;/span&gt;y/N&lt;span style=&#34;color: #000000&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;why:03285bdc704a53de2afbdd4c6c57e10d&#34;&gt;Why?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;filter&lt;/strong&gt; is just a small script, but it solves a frustrating problem. Every time I&amp;rsquo;m in this situation I consult Google and come across gems like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find . -exec echo&lt;/code&gt;echo &amp;ldquo;{}&amp;rdquo; | sed &amp;rsquo;s/./foo/g&amp;rsquo;&lt;code&gt;\;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls F00001-0708-*|sed &#39;s/\(.\).\(.*\)/mv &amp;amp; \1\2/&#39; | sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for i in *; do ; mv &amp;quot;$i&amp;quot; &amp;quot;&lt;/code&gt;echo $i | sed &amp;ldquo;s/(.&lt;em&gt;) - (.&lt;/em&gt;) - (.&lt;em&gt;) - (.&lt;/em&gt;).ogg/\1 - \4 - \3 - \2.ogg/&amp;rdquo;&lt;code&gt;&amp;quot;; done&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that you like my solution better.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Scrabble (1 of 2)</title>
      <link>http://tomre.es/post/hacking-scrabble-part-1/</link>
      <pubDate>Tue, 13 Dec 2011 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/hacking-scrabble-part-1/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Edit #2:&lt;/strong&gt; This article was &lt;a href=&#34;http://lifehacker.com/5868095/hacking-scrabble-part-one&#34;&gt;featured on LifeHacker!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lifehacker.com/5868095/hacking-scrabble-part-one&#34;&gt;&lt;img src=&#34;http://tomre.es/img/hacking_scrabble_lifehacker_wide_placeit.jpg&#34; alt=&#34;LifeHacker Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit #1:&lt;/strong&gt; See &lt;a href=&#34;http://tomre.es/post/hacking-scrabble-part-2&#34;&gt;this article&lt;/a&gt; for the final result of this project.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This post isn’t really about Scrabble. It’s about taking a load of ugly data and hacking around with some scripts to refine it into something I can commit to memory. &lt;em&gt;Then&lt;/em&gt; its about Scrabble. Winning at Scrabble.&lt;/p&gt;

&lt;h3 id=&#34;the-problem:44d2f023e84cdbd39ab45f5c0153c132&#34;&gt;The Problem&lt;/h3&gt;

&lt;p&gt;Knowing exactly which two-letter words exist gives a player a sizeable advantage because it opens up tight corners of the game board and allows them to run two words side-by-side. Sadly most of us only know a handful, and beyond that we’re guessing. Then we’re arguing. And then (inevitably) looking on Google for a list of valid words. &lt;/p&gt;

&lt;p&gt;Personally I’m all for having the 2-letter-word-list on display during play to help us out of tight spots and to keep things fair. But I’ve had plenty of opponents object to this, saying that if I really want to play like that I should &lt;em&gt;memorize the list&lt;/em&gt;. How hard can it be?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;aa ab ad ae ag ah ai al am an ar as at aw ax ay ba be bi bo by ch da de di do ea ed ee ef eh el em en er es et ex fa fe fy gi go gu ha he hi hm ho id if in io is it ja jo ka ki ko ky la li lo ma me mi mm mo mu my na ne no nu ny ob od oe of oh oi om on oo op or os ou ow ox oy pa pe pi po qi re sh si so st ta te ti to ug uh um un up ur us ut we wo xi xu ya ye yo yu za zo&lt;/p&gt;

&lt;p&gt;(source: &lt;a href=&#34;http://en.wiktionary.org/wiki/Appendix:Official_English_Scrabble_2-letter_words&#34;&gt;SOWPODS&lt;/a&gt;, used for British tournament play)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That’s 124 words! More than a hundred arbitrary letter-pairs, with no connecting pattern and most of which I don’t recognise. Committing that to memory is better left to sauvants who can happily recall the order of a shuffled deck of cards.&lt;/p&gt;

&lt;p&gt;I had already given up with the problem, and I was writing the list out on paper to be kept in the game box. To make it easier to fit on a page, I tried to compress the information, producing a table like this:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a:&lt;/strong&gt; abdeghilmnrstwxy&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;j:&lt;/strong&gt; ao&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;s:&lt;/strong&gt; hiot&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;b:&lt;/strong&gt; aeioy&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;k:&lt;/strong&gt; aioy&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;t:&lt;/strong&gt; aeio&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;c:&lt;/strong&gt; h&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;l:&lt;/strong&gt; aio&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;u:&lt;/strong&gt; ghmnprst&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;d:&lt;/strong&gt; aeio&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;m:&lt;/strong&gt; aeimouy&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;w:&lt;/strong&gt; eo&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;e:&lt;/strong&gt; adefhlmnrstx&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;n:&lt;/strong&gt; aeouy&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;x:&lt;/strong&gt; iu&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;f:&lt;/strong&gt; aey&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;o:&lt;/strong&gt; bdefhimnoprsuwxy&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;y:&lt;/strong&gt; aeou&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;g:&lt;/strong&gt; iou&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;p:&lt;/strong&gt; aeio&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;z:&lt;/strong&gt; ao&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;h:&lt;/strong&gt; aeimo&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;q:&lt;/strong&gt; i&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;i:&lt;/strong&gt; dfnost&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;r:&lt;/strong&gt; e&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Suddenly it’s not so terrifying, is it? The data has some structure. Every &lt;strong&gt;prefix&lt;/strong&gt; has a number of possible &lt;strong&gt;suffixes.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;b&lt;/strong&gt; can be followed by &lt;strong&gt;a&lt;/strong&gt;, &lt;strong&gt;e&lt;/strong&gt;, &lt;strong&gt;i&lt;/strong&gt;, &lt;strong&gt;o&lt;/strong&gt;, or &lt;strong&gt;y&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;But &lt;strong&gt;c&lt;/strong&gt; can only be followed by &lt;strong&gt;h&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s still a lot to commit to memory. Too much: &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;o&lt;/strong&gt; each have sixteen possible suffixes!&lt;/p&gt;

&lt;h3 id=&#34;the-mnemonic-method:44d2f023e84cdbd39ab45f5c0153c132&#34;&gt;The Mnemonic Method&lt;/h3&gt;

&lt;p&gt;I still believe it can be done! The key is in finding an appropriate mnemonic to help us remember arbitrary sets of letters.&lt;/p&gt;

&lt;p&gt;So let’s begin with all the two-letter-words starting with &lt;strong&gt;a&lt;/strong&gt;. If I can memorize the set of letters ’&lt;strong&gt;abdeghilmnrstwxy&lt;/strong&gt;’ then I can mentally verify any word that starts with &lt;strong&gt;a&lt;/strong&gt; by asking, ‘is the &lt;strong&gt;suffix&lt;/strong&gt; in that set?’&lt;/p&gt;

&lt;h4 id=&#34;the-mnemonic-method-anagrams:44d2f023e84cdbd39ab45f5c0153c132&#34;&gt;The Mnemonic Method: Anagrams&lt;/h4&gt;

&lt;p&gt;Your first thought might be to search for anagrams of the string. Mine was too. You’re out of luck - just try asking Wolfram Alpha for &lt;a href=&#34;http://www.wolframalpha.com/input/?i=anagrams+of+abdeghilmnrstwxy&#34; title=&#34;Wolfram Alpha query&#34;&gt;anagrams of abdefhilmnrstwxy&lt;/a&gt;. The problem is simply that there are too few vowels available to build good words. &lt;/p&gt;

&lt;h4 id=&#34;the-mnemonic-method-word-subsets:44d2f023e84cdbd39ab45f5c0153c132&#34;&gt;The Mnemonic Method: Word Subsets&lt;/h4&gt;

&lt;p&gt;Try asking Wolfram Alpha for &lt;a href=&#34;http://www.wolframalpha.com/input/?i=word+subsets+of+abdeghilmnrstwxy&#34; title=&#34;Wolfram Alpha query&#34;&gt;word subsets of abdeghilmnrstwxy&lt;/a&gt;. Now we’re on to something - it returns 4243 results. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a  |  Abe  |  abed  |  Abel  |  abet  |  abets  |  abide  |  abides  |  able  |  abler  |  ables  |  ablest  |  ably  |  Abner  |  abridge  |  abridges  |  abridgment  |  abridgments  |  abs  |  ABS  |  abseil  |  absent  |  absently  |  absinthe  |  …   (total: 4243)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These are words containing only those letters. If we can memorize enough of those words to cover all sixteen letters (&amp;lsquo;axe labs abridgements…’) then we can mentally verify any two-letter-word starting with &lt;strong&gt;a&lt;/strong&gt; by asking &amp;lsquo;is the &lt;strong&gt;suffix&lt;/strong&gt; in any of those words?’.&lt;/p&gt;

&lt;p&gt;A couple of observations at this point:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hand-picking the right words from 4243 results is painful.&lt;/li&gt;
&lt;li&gt;Words like &lt;strong&gt;beer&lt;/strong&gt; are missing because they re-use the letter &lt;strong&gt;e&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the purpose of this memory-check, we don’t care if a letter appears more than once. To memorize the letters &lt;strong&gt;elh&lt;/strong&gt;, we might remember it as ’&lt;strong&gt;hell&lt;/strong&gt;’ - but this method will not suggest that word.&lt;/p&gt;

&lt;h3 id=&#34;the-solution:44d2f023e84cdbd39ab45f5c0153c132&#34;&gt;The Solution&lt;/h3&gt;

&lt;p&gt;Wolfram Alpha’s algorithm is based around the following operation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Find every word in the list of letters, and check it is in the dictionary.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can find many more words by reversing the process:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Find every word in the dictionary, and check only uses letters in the list.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I went on to &lt;a href=&#34;https://github.com/zephod/scrabble-tools&#34; title=&#34;GitHub Scrabble Tools link&#34;&gt;hack together this Python script&lt;/a&gt; which does exactly this. It allows us to control specific things like &lt;strong&gt;minimum and maximum word length&lt;/strong&gt; and allows &lt;strong&gt;reuse of letters&lt;/strong&gt;, so finds many more words than Wolfram Alpha can.&lt;/p&gt;

&lt;p&gt;Armed with this huge number of words, we can programatically look for groups of them which cover all the letters, and save them as mnemonic devices.&lt;/p&gt;

&lt;p&gt;The 100-line algorithm runs as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Load up a good &lt;a href=&#34;http://wordlist.sourceforge.net/&#34; title=&#34;Word lists&#34;&gt;British word list&lt;/a&gt; (obtained from anywhere on the internet).&lt;/li&gt;
&lt;li&gt;Filter the list to remove words which contain the wrong letters. Using the letters ’&lt;strong&gt;abdeghilmnrstwxy&lt;/strong&gt;’, &lt;strong&gt;beer&lt;/strong&gt; remains in the list while &lt;strong&gt;vodka&lt;/strong&gt; is removed.&lt;/li&gt;
&lt;li&gt;Find the word which uses &lt;em&gt;as many different letters as possible&lt;/em&gt;. Eg &lt;strong&gt;&amp;lsquo;nearsightedly&lt;/strong&gt;’ which uses twelve of the letters. This is the start of the mnemonic.&lt;/li&gt;
&lt;li&gt;Keep finding words which use up the remaining letters.&lt;/li&gt;
&lt;li&gt;Loop until all letters are covered. Eg. “&lt;strong&gt;nearsightedly wax balm&lt;/strong&gt;”.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;demonstration:44d2f023e84cdbd39ab45f5c0153c132&#34;&gt;Demonstration &lt;/h3&gt;

&lt;p&gt;This is it! Here I am, searching for mnemonics to help me remember the two-letter-words starting with &lt;strong&gt;a&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;python&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;mf.py&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;abdeghilmnrstwxy&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;--minlen&lt;/span&gt; &lt;span style=&#34;color: #1C01CE&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;--maxlen&lt;/span&gt; &lt;span style=&#34;color: #1C01CE&#34;&gt;9&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;==&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;MnemonicFinder&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;v1.&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Loading&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;dictionary...&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Search&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;string&lt;/span&gt;: &lt;span style=&#34;color: #000000&#34;&gt;abdeghilmnrstwxy&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Generating...&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Mnemonic&lt;/span&gt;: [&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;bearishly&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;midwing&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;tax&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Mnemonic&lt;/span&gt;: [&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;berthings&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;madly&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;wax&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Mnemonic&lt;/span&gt;: [&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;betraying&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;mildews&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;color: #000000&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Mnemonic&lt;/span&gt;: [&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;birthdays&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;mangle&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;#39;wax&amp;#39;&lt;/span&gt;]
    (&lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clipped&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Okay, some are better than others. By scanning the output for a sentence or phrase which I can attach to a mental image, I can make it memorable: “&lt;strong&gt;birthdays mangle wax&lt;/strong&gt;” means candles on a birthday cake. Is &lt;strong&gt;ap&lt;/strong&gt; a word? No, because there’s no &lt;strong&gt;p&lt;/strong&gt; in that phrase.&lt;/p&gt;

&lt;p&gt;Hooray! I am one twenty-sixth of the way towards memorising all of the two-letter-words permitted in Scrabble. Have a look at &lt;a href=&#34;https://github.com/zephod/scrabble-tools&#34; title=&#34;GitHub link&#34;&gt;the files on GitHub&lt;/a&gt; if you want to try out the script for yourself. In Part 2, I’ll develop 26 mnemonics and work on a technique for memorising them.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This article was originally published on zephod.com on Tumblr, and has been migrated to tomre.es on GitHub Pages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/tumblr_archive_1.png&#34; alt=&#34;(defunct) Tumblr Social Links&#34; style=&#34;margin: 0; width: 425px;&#34;/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Java Games: Kickabout League</title>
      <link>http://tomre.es/post/games-kickabout/</link>
      <pubDate>Sun, 13 Feb 2011 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/games-kickabout/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;For the sake of posterity, and for completeness, I am including links to software I wrote in my first job. I graduated from the University of Cambridge in 2007 and was hired to write Java browser games to complement &lt;a href=&#34;http://runescape.com&#34;&gt;Runescape&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.funorb.com/info.ws?game=kickabout&#34;&gt;Kickabout&lt;/a&gt; was a highly ambitious multiplayer football game which I designed and wrote for &lt;a href=&#34;http://funorb.com&#34;&gt;FunOrb.com&lt;/a&gt;. It had over half a million players at its peak during the 2010 World Cup.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.funorb.com/info.ws?game=kickabout&#34;&gt;&lt;img src=&#34;http://tomre.es/img/games_kickabout.jpg&#34; alt=&#34;Kickabout&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The goal was to test realtime multiplayer mechanics over TCP - which turns out to be a very tough problem.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fortunately, a year after launch, the IETF standardised &lt;a href=&#34;https://en.wikipedia.org/wiki/WebSocket&#34;&gt;WebSockets&lt;/a&gt;, which provides a much more elegant solution.&lt;/li&gt;
&lt;li&gt;Sadly, it means the game quickly became obsolete!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I led a team of four people to develop the game over eighteen months. Kickabout featured an auction house, player customisation, and 4v4 in-browser multiplayer. The game is based on the simplified soccer games I used to enjoy on the NES when I was young.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The game is still available online [as of 2016] but it&amp;rsquo;s tied to a backend infrastructure which is unlikely to remain online while Jagex winds down their commercial service.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/kickabout4.jpg&#34; alt=&#34;Screenshot 4&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/kickabout1.jpg&#34; alt=&#34;Screenshot 1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/kickabout2.jpg&#34; alt=&#34;Screenshot 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/kickabout3.jpg&#34; alt=&#34;Screenshot 3&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Java Games: Pixelate</title>
      <link>http://tomre.es/post/games-pixelate/</link>
      <pubDate>Wed, 03 Sep 2008 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/games-pixelate/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;For the sake of posterity, and for completeness, I am including links to software I wrote in my first job. I graduated from the University of Cambridge in 2007 and was hired to write Java browser games to complement &lt;a href=&#34;http://runescape.com&#34;&gt;Runescape&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;pixelate-http-www-funorb-com-info-ws-game-pixelate:559ce3b64be3c050bd4fde8e18b3525d&#34;&gt;&lt;a href=&#34;http://www.funorb.com/info.ws?game=pixelate&#34;&gt;Pixelate&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To detox from long days writing Java, especially in the rush to launch &lt;a href=&#34;http://funorb.com&#34;&gt;FunOrb.com&lt;/a&gt;, I would play &lt;a href=&#34;https://www.penny-arcade.com/comic/2005/03/25&#34;&gt;&lt;em&gt;Lumines&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I got a bit obsessed. My next project was to design a spiritual successor with the same aesthetic idea of transitioning colour and light. The result was a 3D-falling-block game:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.funorb.com/info.ws?game=pixelate&#34;&gt;&lt;img src=&#34;http://tomre.es/img/games_pixelate.jpg&#34; alt=&#34;Pixelate&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This was the first Jagex game with any kind of real-time multiplayer feedback.

&lt;ul&gt;
&lt;li&gt;(Writing browser applets entirely on TCP streams, not UDP, means that was &lt;em&gt;really difficult&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I was very keen for Pixelate to be unique, not a clone of any existing block game.

&lt;ul&gt;
&lt;li&gt;The result is fun, but not as much fun as &lt;em&gt;Lumines&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s possible to master the game with a little effort. We saw users playing perfect (ie. unbeatable) games against each other in head-to-head multiplayer.&lt;/li&gt;
&lt;li&gt;As of 2016, the game is still playable if you can get Java to work with your browser.

&lt;ul&gt;
&lt;li&gt;As the service is being wound down, it&amp;rsquo;s unlikely the multiplayer servers will remain online.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/pixelate4.jpg&#34; alt=&#34;Screenshot 4&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/pixelate1.jpg&#34; alt=&#34;Screenshot 1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/pixelate2.jpg&#34; alt=&#34;Screenshot 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/pixelate3.jpg&#34; alt=&#34;Screenshot 3&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Java Games: Zombie Dawn</title>
      <link>http://tomre.es/post/games-zombiedawn/</link>
      <pubDate>Tue, 11 Mar 2008 13:32:49 +0000</pubDate>
      
      <guid>http://tomre.es/post/games-zombiedawn/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;For the sake of posterity, and for completeness, I am including links to software I wrote in my first job. I graduated from the University of Cambridge in 2007 and was hired to write Java browser games to complement &lt;a href=&#34;http://runescape.com&#34;&gt;Runescape&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;zombie-dawn-http-www-funorb-com-info-ws-game-zombiedawn:882e665b1475e57dddb6dd0343e5f482&#34;&gt;&lt;a href=&#34;http://www.funorb.com/info.ws?game=zombiedawn&#34;&gt;Zombie Dawn&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This was a launch title commissioned for the unveiling of &lt;a href=&#34;http://funorb.com&#34;&gt;FunOrb.com&lt;/a&gt; in 2008.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.funorb.com/info.ws?game=zombiedawn&#34;&gt;&lt;img src=&#34;http://tomre.es/img/games_zombiedawn.jpg&#34; alt=&#34;Zombie Dawn Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I based the design broadly on Command &amp;amp; Conquer: Red Alert.&lt;/li&gt;
&lt;li&gt;This is my favourite piece of software I have ever written, ever.&lt;/li&gt;
&lt;li&gt;Jagex later commissioned two sequels: &lt;em&gt;Zombie Dawn London&lt;/em&gt; and &lt;em&gt;Zombie Dawn Multiplayer&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;As of 2016, the game is still playable if you can get Java to work with your browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/zombiedawn1.jpg&#34; alt=&#34;Screenshot 1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/zombiedawn2.jpg&#34; alt=&#34;Screenshot 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/zombiedawn3.jpg&#34; alt=&#34;Screenshot 3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tomre.es/img/zombiedawn4.jpg&#34; alt=&#34;Screenshot 4&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>